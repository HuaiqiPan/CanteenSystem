#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace CanteenSystem.Model
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="CanteenDB")]
	public partial class MenuCheckedOrder_RDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region 可扩展性方法定义
    partial void OnCreated();
    partial void InsertMenuCheckedOrder_R(MenuCheckedOrder_R instance);
    partial void UpdateMenuCheckedOrder_R(MenuCheckedOrder_R instance);
    partial void DeleteMenuCheckedOrder_R(MenuCheckedOrder_R instance);
    #endregion
		
		public MenuCheckedOrder_RDataContext() : 
				base(global::CanteenSystem.Model.Properties.Settings.Default.CanteenDBConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public MenuCheckedOrder_RDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public MenuCheckedOrder_RDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public MenuCheckedOrder_RDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public MenuCheckedOrder_RDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<MenuCheckedOrder_R> MenuCheckedOrder_R
		{
			get
			{
				return this.GetTable<MenuCheckedOrder_R>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MenuCheckedOrder_R")]
	public partial class MenuCheckedOrder_R : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MenuCheckedOrderID;
		
		private string _CheckedOrderID;
		
		private string _MenuName;
		
		private string _Unit;
		
		private System.Nullable<double> _Quote;
		
		private System.Nullable<double> _Rate;
		
		private System.Nullable<double> _Price;
		
		private System.Nullable<double> _Count;
		
		private System.Nullable<double> _Money;
		
		private System.Nullable<System.DateTime> _InputDate;
		
		private string _Remark;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMenuCheckedOrderIDChanging(string value);
    partial void OnMenuCheckedOrderIDChanged();
    partial void OnCheckedOrderIDChanging(string value);
    partial void OnCheckedOrderIDChanged();
    partial void OnMenuNameChanging(string value);
    partial void OnMenuNameChanged();
    partial void OnUnitChanging(string value);
    partial void OnUnitChanged();
    partial void OnQuoteChanging(System.Nullable<double> value);
    partial void OnQuoteChanged();
    partial void OnRateChanging(System.Nullable<double> value);
    partial void OnRateChanged();
    partial void OnPriceChanging(System.Nullable<double> value);
    partial void OnPriceChanged();
    partial void OnCountChanging(System.Nullable<double> value);
    partial void OnCountChanged();
    partial void OnMoneyChanging(System.Nullable<double> value);
    partial void OnMoneyChanged();
    partial void OnInputDateChanging(System.Nullable<System.DateTime> value);
    partial void OnInputDateChanged();
    partial void OnRemarkChanging(string value);
    partial void OnRemarkChanged();
    #endregion
		
		public MenuCheckedOrder_R()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MenuCheckedOrderID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MenuCheckedOrderID
		{
			get
			{
				return this._MenuCheckedOrderID;
			}
			set
			{
				if ((this._MenuCheckedOrderID != value))
				{
					this.OnMenuCheckedOrderIDChanging(value);
					this.SendPropertyChanging();
					this._MenuCheckedOrderID = value;
					this.SendPropertyChanged("MenuCheckedOrderID");
					this.OnMenuCheckedOrderIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CheckedOrderID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string CheckedOrderID
		{
			get
			{
				return this._CheckedOrderID;
			}
			set
			{
				if ((this._CheckedOrderID != value))
				{
					this.OnCheckedOrderIDChanging(value);
					this.SendPropertyChanging();
					this._CheckedOrderID = value;
					this.SendPropertyChanged("CheckedOrderID");
					this.OnCheckedOrderIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MenuName", DbType="VarChar(50)")]
		public string MenuName
		{
			get
			{
				return this._MenuName;
			}
			set
			{
				if ((this._MenuName != value))
				{
					this.OnMenuNameChanging(value);
					this.SendPropertyChanging();
					this._MenuName = value;
					this.SendPropertyChanged("MenuName");
					this.OnMenuNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Unit", DbType="VarChar(50)")]
		public string Unit
		{
			get
			{
				return this._Unit;
			}
			set
			{
				if ((this._Unit != value))
				{
					this.OnUnitChanging(value);
					this.SendPropertyChanging();
					this._Unit = value;
					this.SendPropertyChanged("Unit");
					this.OnUnitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Quote", DbType="Float")]
		public System.Nullable<double> Quote
		{
			get
			{
				return this._Quote;
			}
			set
			{
				if ((this._Quote != value))
				{
					this.OnQuoteChanging(value);
					this.SendPropertyChanging();
					this._Quote = value;
					this.SendPropertyChanged("Quote");
					this.OnQuoteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Rate", DbType="Float")]
		public System.Nullable<double> Rate
		{
			get
			{
				return this._Rate;
			}
			set
			{
				if ((this._Rate != value))
				{
					this.OnRateChanging(value);
					this.SendPropertyChanging();
					this._Rate = value;
					this.SendPropertyChanged("Rate");
					this.OnRateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price", DbType="Float")]
		public System.Nullable<double> Price
		{
			get
			{
				return this._Price;
			}
			set
			{
				if ((this._Price != value))
				{
					this.OnPriceChanging(value);
					this.SendPropertyChanging();
					this._Price = value;
					this.SendPropertyChanged("Price");
					this.OnPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Count", DbType="Float")]
		public System.Nullable<double> Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this.OnCountChanging(value);
					this.SendPropertyChanging();
					this._Count = value;
					this.SendPropertyChanged("Count");
					this.OnCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Money", DbType="Float")]
		public System.Nullable<double> Money
		{
			get
			{
				return this._Money;
			}
			set
			{
				if ((this._Money != value))
				{
					this.OnMoneyChanging(value);
					this.SendPropertyChanging();
					this._Money = value;
					this.SendPropertyChanged("Money");
					this.OnMoneyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InputDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> InputDate
		{
			get
			{
				return this._InputDate;
			}
			set
			{
				if ((this._InputDate != value))
				{
					this.OnInputDateChanging(value);
					this.SendPropertyChanging();
					this._InputDate = value;
					this.SendPropertyChanged("InputDate");
					this.OnInputDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Remark", DbType="VarChar(200)")]
		public string Remark
		{
			get
			{
				return this._Remark;
			}
			set
			{
				if ((this._Remark != value))
				{
					this.OnRemarkChanging(value);
					this.SendPropertyChanging();
					this._Remark = value;
					this.SendPropertyChanged("Remark");
					this.OnRemarkChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
